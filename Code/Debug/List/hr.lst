
AVRASM ver. 2.1.30  C:\Users\Asus\Desktop\v2\Debug\List\hr.asm Mon Jul 16 06:23:56 2018

C:\Users\Asus\Desktop\v2\Debug\List\hr.asm(1088): warning: Register r4 already defined by the .DEF directive
C:\Users\Asus\Desktop\v2\Debug\List\hr.asm(1089): warning: Register r5 already defined by the .DEF directive
C:\Users\Asus\Desktop\v2\Debug\List\hr.asm(1090): warning: Register r7 already defined by the .DEF directive
C:\Users\Asus\Desktop\v2\Debug\List\hr.asm(1091): warning: Register r6 already defined by the .DEF directive
C:\Users\Asus\Desktop\v2\Debug\List\hr.asm(1092): warning: Register r9 already defined by the .DEF directive
                 
                 
                 ;CodeVisionAVR C Compiler V3.12 Advanced
                 ;(C) Copyright 1998-2014 Pavel Haiduc, HP InfoTech s.r.l.
                 ;http://www.hpinfotech.com
                 
                 ;Build configuration    : Debug
                 ;Chip type              : ATmega16
                 ;Program type           : Application
                 ;Clock frequency        : 8.000000 MHz
                 ;Memory model           : Small
                 ;Optimize for           : Size
                 ;(s)printf features     : int, width
                 ;(s)scanf features      : int, width
                 ;External RAM size      : 0
                 ;Data Stack size        : 256 byte(s)
                 ;Heap size              : 0 byte(s)
                 ;Promote 'char' to 'int': Yes
                 ;'char' is unsigned     : Yes
                 ;8 bit enums            : Yes
                 ;Global 'const' stored in FLASH: Yes
                 ;Enhanced function parameter passing: Yes
                 ;Enhanced core instructions: On
                 ;Automatic register allocation for global variables: On
                 ;Smart register allocation: On
                 
                 	#define _MODEL_SMALL_
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega16
                 	#pragma AVRPART MEMORY PROG_FLASH 16384
                 	#pragma AVRPART MEMORY EEPROM 512
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 1024
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x60
                 
                 	#define CALL_SUPPORTED 1
                 
                 	.LISTMAC
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU USR=0xB
                 	.EQU UDR=0xC
                 	.EQU SPSR=0xE
                 	.EQU SPDR=0xF
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU EECR=0x1C
                 	.EQU EEDR=0x1D
                 	.EQU EEARL=0x1E
                 	.EQU EEARH=0x1F
                 	.EQU WDTCR=0x21
                 	.EQU MCUCR=0x35
                 	.EQU GICR=0x3B
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0060
                 	.EQU __SRAM_END=0x045F
                 	.EQU __DSTACK_SIZE=0x0100
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	LDI  R24,BYTE3(2*@0+(@1))
                 	LDI  R25,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	CALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	PUSH R26
                 	PUSH R27
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMRDW
                 	POP  R27
                 	POP  R26
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EX
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __EEPROMRDD
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	CALL __PUTDP1
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z+
                 	LD   R23,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R1,X+
                 	LD   R24,X+
                 	LD   R25,X
                 	MOVW R26,R0
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 ;NAME DEFINITIONS FOR GLOBAL VARIABLES ALLOCATED TO REGISTERS
                 	.DEF _dt=R4
                 	.DEF _dt_msb=R5
                 	.DEF __lcd_x=R7
                 	.DEF __lcd_y=R6
                 	.DEF __lcd_maxx=R9
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 940c 0046 	JMP  __RESET
000002 940c 0073 	JMP  _ext_int0_isr
000004 940c 0000 	JMP  0x00
000006 940c 0000 	JMP  0x00
000008 940c 0000 	JMP  0x00
00000a 940c 0000 	JMP  0x00
00000c 940c 0000 	JMP  0x00
00000e 940c 0000 	JMP  0x00
000010 940c 0000 	JMP  0x00
000012 940c 0000 	JMP  0x00
000014 940c 0000 	JMP  0x00
000016 940c 0000 	JMP  0x00
000018 940c 0000 	JMP  0x00
00001a 940c 0000 	JMP  0x00
00001c 940c 0000 	JMP  0x00
00001e 940c 0000 	JMP  0x00
000020 940c 0000 	JMP  0x00
000022 940c 0000 	JMP  0x00
000024 940c 0000 	JMP  0x00
000026 940c 0000 	JMP  0x00
000028 940c 0000 	JMP  0x00
                 
                 _tbl10_G100:
00002a 2710
00002b 03e8
00002c 0064
00002d 000a      	.DB  0x10,0x27,0xE8,0x3,0x64,0x0,0xA,0x0
00002e 0001      	.DB  0x1,0x0
                 _tbl16_G100:
00002f 1000
000030 0100
000031 0010
000032 0001      	.DB  0x0,0x10,0x0,0x1,0x10,0x0,0x1,0x0
                 
                 _0x0:
000033 6548
000034 7261
000035 5274
000036 7461      	.DB  0x48,0x65,0x61,0x72,0x74,0x52,0x61,0x74
000037 2065
000038 6228
000039 6d70
00003a 3a29      	.DB  0x65,0x20,0x28,0x62,0x70,0x6D,0x29,0x3A
00003b 2000
00003c 2020
00003d 2020
00003e 2520      	.DB  0x0,0x20,0x20,0x20,0x20,0x20,0x20,0x25
00003f 3630
000040 0075      	.DB  0x30,0x36,0x75,0x0
                 _0x2020003:
000041 c080      	.DB  0x80,0xC0
                 
                 __GLOBAL_INI_TBL:
000042 0002      	.DW  0x02
000043 0174      	.DW  __base_y_G101
000044 0082      	.DW  _0x2020003*2
                 
                 _0xFFFFFFFF:
000045 0000      	.DW  0
                 
                 #define __GLOBAL_INI_TBL_PRESENT 1
                 
                 __RESET:
000046 94f8      	CLI
000047 27ee      	CLR  R30
000048 bbec      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
000049 e0f1      	LDI  R31,1
00004a bffb      	OUT  GICR,R31
00004b bfeb      	OUT  GICR,R30
00004c bfe5      	OUT  MCUCR,R30
                 
                 ;CLEAR R2-R14
00004d e08d      	LDI  R24,(14-2)+1
00004e e0a2      	LDI  R26,2
00004f 27bb      	CLR  R27
                 __CLEAR_REG:
000050 93ed      	ST   X+,R30
000051 958a      	DEC  R24
000052 f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
000053 e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
000054 e094      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
000055 e6a0      	LDI  R26,__SRAM_START
                 __CLEAR_SRAM:
000056 93ed      	ST   X+,R30
000057 9701      	SBIW R24,1
000058 f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
000059 e8e4      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
00005a e0f0      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
00005b 9185      	LPM  R24,Z+
00005c 9195      	LPM  R25,Z+
00005d 9700      	SBIW R24,0
00005e f061      	BREQ __GLOBAL_INI_END
00005f 91a5      	LPM  R26,Z+
000060 91b5      	LPM  R27,Z+
000061 9005      	LPM  R0,Z+
000062 9015      	LPM  R1,Z+
000063 01bf      	MOVW R22,R30
000064 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
000065 9005      	LPM  R0,Z+
000066 920d      	ST   X+,R0
000067 9701      	SBIW R24,1
000068 f7e1      	BRNE __GLOBAL_INI_LOOP
000069 01fb      	MOVW R30,R22
00006a cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
00006b e5ef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
00006c bfed      	OUT  SPL,R30
00006d e0e4      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
00006e bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
00006f e6c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
000070 e0d1      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
000071 940c 0088 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0
                 
                 	.DSEG
                 	.ORG 0x160
                 
                 	.CSEG
                 ;/*******************************************************
                 ;
                 ;Project : Heart Rate Monitoring (PPG)
                 ;Date    : 7/2018
                 ;Author  : Mehran Mehraban
                 ;        : Shiva Sedghi
                 ;        : Fatemeh Jabari
                 ;
                 ;
                 ;
                 ;Chip type                   : ATmega16
                 ;Program type                : Application
                 ;AVR Core Clock frequency    : 8.000000 MHz
                 ;Memory model                : Small
                 ;External RAM size           : 0
                 ;Data Stack size             : 512
                 ;*******************************************************/
                 ;
                 ;#include <mega16.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x40
                 	.EQU __sm_mask=0xB0
                 	.EQU __sm_powerdown=0x20
                 	.EQU __sm_powersave=0x30
                 	.EQU __sm_standby=0xA0
                 	.EQU __sm_ext_standby=0xB0
                 	.EQU __sm_adc_noise_red=0x10
                 	.SET power_ctrl_reg=mcucr
                 	#endif
                 ;#include <stdio.h>
                 ;#include <alcd.h>
                 ;#include <delay.h>
                 ;
                 ;unsigned int dt;
                 ;
                 ;char tmp[20];
                 ;
                 ;
                 ;interrupt [EXT_INT0] void ext_int0_isr(void)
                 ; 0000 001E {
                 
                 	.CSEG
                 _ext_int0_isr:
                 ; .FSTART _ext_int0_isr
000073 93aa      	ST   -Y,R26
000074 93ea      	ST   -Y,R30
000075 93fa      	ST   -Y,R31
000076 b7ef      	IN   R30,SREG
000077 93ea      	ST   -Y,R30
                 ; 0000 001F 
                 ; 0000 0020     dt = TCNT1L | (TCNT1H << 8) ;
000078 b5ec      	IN   R30,0x2C
000079 2fae      	MOV  R26,R30
00007a b5ed      	IN   R30,0x2D
00007b 2ffe      	MOV  R31,R30
00007c e0e0      	LDI  R30,0
00007d 2bea      	OR   R30,R26
00007e 012f      	MOVW R4,R30
                 ; 0000 0021     TCNT1H=0;
00007f e0e0      	LDI  R30,LOW(0)
000080 bded      	OUT  0x2D,R30
                 ; 0000 0022     TCNT1L=0;
000081 bdec      	OUT  0x2C,R30
                 ; 0000 0023 
                 ; 0000 0024 }
000082 91e9      	LD   R30,Y+
000083 bfef      	OUT  SREG,R30
000084 91f9      	LD   R31,Y+
000085 91e9      	LD   R30,Y+
000086 91a9      	LD   R26,Y+
000087 9518      	RETI
                 ; .FEND
                 ;
                 ;void main(void)
                 ; 0000 0027 {
                 _main:
                 ; .FSTART _main
                 ; 0000 0028 
                 ; 0000 0029 DDRA=(0<<DDA7) | (0<<DDA6) | (0<<DDA5) | (0<<DDA4) | (0<<DDA3) | (0<<DDA2) | (0<<DDA1) | (0<<DDA0);
000088 e0e0      	LDI  R30,LOW(0)
000089 bbea      	OUT  0x1A,R30
                 ; 0000 002A PORTA=(0<<PORTA7) | (0<<PORTA6) | (0<<PORTA5) | (0<<PORTA4) | (0<<PORTA3) | (0<<PORTA2) | (0<<PORTA1) | (0<<PORTA0);
00008a bbeb      	OUT  0x1B,R30
                 ; 0000 002B 
                 ; 0000 002C DDRB=(0<<DDB7) | (0<<DDB6) | (0<<DDB5) | (0<<DDB4) | (0<<DDB3) | (0<<DDB2) | (0<<DDB1) | (0<<DDB0);
00008b bbe7      	OUT  0x17,R30
                 ; 0000 002D PORTB=(0<<PORTB7) | (0<<PORTB6) | (0<<PORTB5) | (0<<PORTB4) | (0<<PORTB3) | (0<<PORTB2) | (0<<PORTB1) | (0<<PORTB0);
00008c bbe8      	OUT  0x18,R30
                 ; 0000 002E 
                 ; 0000 002F DDRC=(0<<DDC7) | (0<<DDC6) | (0<<DDC5) | (0<<DDC4) | (0<<DDC3) | (0<<DDC2) | (0<<DDC1) | (0<<DDC0);
00008d bbe4      	OUT  0x14,R30
                 ; 0000 0030 PORTC=(0<<PORTC7) | (0<<PORTC6) | (0<<PORTC5) | (0<<PORTC4) | (0<<PORTC3) | (0<<PORTC2) | (0<<PORTC1) | (0<<PORTC0);
00008e bbe5      	OUT  0x15,R30
                 ; 0000 0031 
                 ; 0000 0032 DDRD=0;//(1<<DDD7) | (1<<DDD6) | (1<<DDD5) | (1<<DDD4) | (1<<DDD3) | (1<<DDD2) | (1<<DDD1) | (1<<DDD0);
00008f bbe1      	OUT  0x11,R30
                 ; 0000 0033 PORTD=(0<<PORTD7) | (0<<PORTD5) | (0<<PORTD4) | (0<<PORTD3) | (0<<PORTD2) | (0<<PORTD1) | (0<<PORTD0);
000090 bbe2      	OUT  0x12,R30
                 ; 0000 0034 
                 ; 0000 0035 TCCR0=(0<<WGM00) | (0<<COM01) | (0<<COM00) | (0<<WGM01) | (0<<CS02) | (0<<CS01) | (0<<CS00);
000091 bfe3      	OUT  0x33,R30
                 ; 0000 0036 TCNT0=0x00;
000092 bfe2      	OUT  0x32,R30
                 ; 0000 0037 OCR0=0x00;
000093 bfec      	OUT  0x3C,R30
                 ; 0000 0038 
                 ; 0000 0039 TCCR1A=(0<<COM1A1) | (0<<COM1A0) | (0<<COM1B1) | (0<<COM1B0) | (0<<WGM11) | (0<<WGM10);
000094 bdef      	OUT  0x2F,R30
                 ; 0000 003A TCCR1B=(0<<ICNC1) | (0<<ICES1) | (0<<WGM13) | (0<<WGM12) | (1<<CS12) | (0<<CS11) | (1<<CS10);
000095 e0e5      	LDI  R30,LOW(5)
000096 bdee      	OUT  0x2E,R30
                 ; 0000 003B TCNT1H=0x00;
000097 e0e0      	LDI  R30,LOW(0)
000098 bded      	OUT  0x2D,R30
                 ; 0000 003C TCNT1L=0x00;
000099 bdec      	OUT  0x2C,R30
                 ; 0000 003D ICR1H=0x00;
00009a bde7      	OUT  0x27,R30
                 ; 0000 003E ICR1L=0x00;
00009b bde6      	OUT  0x26,R30
                 ; 0000 003F OCR1AH=0x00;
00009c bdeb      	OUT  0x2B,R30
                 ; 0000 0040 OCR1AL=0x00;
00009d bdea      	OUT  0x2A,R30
                 ; 0000 0041 OCR1BH=0x00;
00009e bde9      	OUT  0x29,R30
                 ; 0000 0042 OCR1BL=0x00;
00009f bde8      	OUT  0x28,R30
                 ; 0000 0043 
                 ; 0000 0044 ASSR=0<<AS2;
0000a0 bde2      	OUT  0x22,R30
                 ; 0000 0045 TCCR2=(0<<PWM2) | (0<<COM21) | (0<<COM20) | (0<<CTC2) | (0<<CS22) | (0<<CS21) | (0<<CS20);
0000a1 bde5      	OUT  0x25,R30
                 ; 0000 0046 TCNT2=0x00;
0000a2 bde4      	OUT  0x24,R30
                 ; 0000 0047 OCR2=0x00;
0000a3 bde3      	OUT  0x23,R30
                 ; 0000 0048 
                 ; 0000 0049 TIMSK=(0<<OCIE2) | (0<<TOIE2) | (0<<TICIE1) | (0<<OCIE1A) | (0<<OCIE1B) | (0<<TOIE1) | (0<<OCIE0) | (0<<TOIE0);
0000a4 bfe9      	OUT  0x39,R30
                 ; 0000 004A 
                 ; 0000 004B 
                 ; 0000 004C GICR|=(0<<INT1) | (1<<INT0) | (0<<INT2);
0000a5 b7eb      	IN   R30,0x3B
0000a6 64e0      	ORI  R30,0x40
0000a7 bfeb      	OUT  0x3B,R30
                 ; 0000 004D MCUCR=(0<<ISC11) | (0<<ISC10) | (1<<ISC01) | (1<<ISC00);
0000a8 e0e3      	LDI  R30,LOW(3)
0000a9 bfe5      	OUT  0x35,R30
                 ; 0000 004E MCUCSR=(0<<ISC2);
0000aa e0e0      	LDI  R30,LOW(0)
0000ab bfe4      	OUT  0x34,R30
                 ; 0000 004F GIFR=(0<<INTF1) | (1<<INTF0) | (0<<INTF2);
0000ac e4e0      	LDI  R30,LOW(64)
0000ad bfea      	OUT  0x3A,R30
                 ; 0000 0050 
                 ; 0000 0051 
                 ; 0000 0052 UCSRB=(0<<RXCIE) | (0<<TXCIE) | (0<<UDRIE) | (0<<RXEN) | (0<<TXEN) | (0<<UCSZ2) | (0<<RXB8) | (0<<TXB8);
0000ae e0e0      	LDI  R30,LOW(0)
0000af b9ea      	OUT  0xA,R30
                 ; 0000 0053 ACSR=(1<<ACD) | (0<<ACBG) | (0<<ACO) | (0<<ACI) | (0<<ACIE) | (0<<ACIC) | (0<<ACIS1) | (0<<ACIS0);
0000b0 e8e0      	LDI  R30,LOW(128)
0000b1 b9e8      	OUT  0x8,R30
                 ; 0000 0054 SFIOR=(0<<ACME);
0000b2 e0e0      	LDI  R30,LOW(0)
0000b3 bfe0      	OUT  0x30,R30
                 ; 0000 0055 
                 ; 0000 0056 
                 ; 0000 0057 ADCSRA=(0<<ADEN) | (0<<ADSC) | (0<<ADATE) | (0<<ADIF) | (0<<ADIE) | (0<<ADPS2) | (0<<ADPS1) | (0<<ADPS0);
0000b4 b9e6      	OUT  0x6,R30
                 ; 0000 0058 SPCR=(0<<SPIE) | (0<<SPE) | (0<<DORD) | (0<<MSTR) | (0<<CPOL) | (0<<CPHA) | (0<<SPR1) | (0<<SPR0);
0000b5 b9ed      	OUT  0xD,R30
                 ; 0000 0059 TWCR=(0<<TWEA) | (0<<TWSTA) | (0<<TWSTO) | (0<<TWEN) | (0<<TWIE);
0000b6 bfe6      	OUT  0x36,R30
                 ; 0000 005A 
                 ; 0000 005B 
                 ; 0000 005C 
                 ; 0000 005D lcd_init(16);
0000b7 e1a0      	LDI  R26,LOW(16)
0000b8 940e 030f 	CALL _lcd_init
                 ; 0000 005E 
                 ; 0000 005F 
                 ; 0000 0060 
                 ; 0000 0061 #asm("sei")
0000ba 9478      	sei
                 ; 0000 0062 
                 ; 0000 0063 
                 ; 0000 0064 while (1)
                 _0x3:
                 ; 0000 0065       {
                 ; 0000 0066        lcd_gotoxy(0,0);
0000bb e0e0      	LDI  R30,LOW(0)
0000bc 93ea      	ST   -Y,R30
0000bd e0a0      	LDI  R26,LOW(0)
0000be 940e 02bf 	CALL _lcd_gotoxy
                 ; 0000 0067        lcd_putsf("HeartRate (bpm):");
                +
0000c0 e6a6     +LDI R26 , LOW ( 2 * _0x0 + ( 0 ) )
0000c1 e0b0     +LDI R27 , HIGH ( 2 * _0x0 + ( 0 ) )
                 	__POINTW2FN _0x0,0
0000c2 940e 02fc 	CALL _lcd_putsf
                 ; 0000 0068        lcd_gotoxy(0,1);
0000c4 e0e0      	LDI  R30,LOW(0)
0000c5 93ea      	ST   -Y,R30
0000c6 e0a1      	LDI  R26,LOW(1)
0000c7 940e 02bf 	CALL _lcd_gotoxy
                 ; 0000 0069        sprintf (tmp,"      %06u",(7813*60)/dt);
0000c9 e6e0      	LDI  R30,LOW(_tmp)
0000ca e0f1      	LDI  R31,HIGH(_tmp)
0000cb 93fa      	ST   -Y,R31
0000cc 93ea      	ST   -Y,R30
                +
0000cd e7e7     +LDI R30 , LOW ( 2 * _0x0 + ( 17 ) )
0000ce e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 17 ) )
                 	__POINTW1FN _0x0,17
0000cf 93fa      	ST   -Y,R31
0000d0 93ea      	ST   -Y,R30
0000d1 01f2      	MOVW R30,R4
0000d2 2766      	CLR  R22
0000d3 2777      	CLR  R23
                +
0000d4 e2ac     +LDI R26 , LOW ( 0x7272C )
0000d5 e2b7     +LDI R27 , HIGH ( 0x7272C )
0000d6 e087     +LDI R24 , BYTE3 ( 0x7272C )
0000d7 e090     +LDI R25 , BYTE4 ( 0x7272C )
                 	__GETD2N 0x7272C
0000d8 940e 03d0 	CALL __DIVD21
0000da 940e 03f0 	CALL __PUTPARD1
0000dc e084      	LDI  R24,4
0000dd 940e 025a 	CALL _sprintf
0000df 9628      	ADIW R28,8
                 ; 0000 006A        lcd_puts(tmp);
0000e0 e6a0      	LDI  R26,LOW(_tmp)
0000e1 e0b1      	LDI  R27,HIGH(_tmp)
0000e2 940e 02ed 	CALL _lcd_puts
                 ; 0000 006B 
                 ; 0000 006C 
                 ; 0000 006D //           PORTD=255;
                 ; 0000 006E //          delay_ms(1000);
                 ; 0000 006F //          PORTD=0;
                 ; 0000 0070 //          delay_ms(1000) ;
                 ; 0000 0071 
                 ; 0000 0072       }
0000e4 cfd6      	RJMP _0x3
                 ; 0000 0073 }
                 _0x6:
0000e5 cfff      	RJMP _0x6
                 ; .FEND
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 _put_buff_G100:
                 ; .FSTART _put_buff_G100
0000e6 93ba      	ST   -Y,R27
0000e7 93aa      	ST   -Y,R26
0000e8 931a      	ST   -Y,R17
0000e9 930a      	ST   -Y,R16
0000ea 81aa      	LDD  R26,Y+2
0000eb 81bb      	LDD  R27,Y+2+1
0000ec 9612      	ADIW R26,2
0000ed 940e 03e8 	CALL __GETW1P
0000ef 9730      	SBIW R30,0
0000f0 f159      	BREQ _0x2000010
0000f1 81aa      	LDD  R26,Y+2
0000f2 81bb      	LDD  R27,Y+2+1
0000f3 9614      	ADIW R26,4
0000f4 940e 03e8 	CALL __GETW1P
0000f6 018f      	MOVW R16,R30
0000f7 9730      	SBIW R30,0
0000f8 f061      	BREQ _0x2000012
                +
0000f9 3002     +CPI R16 , LOW ( 2 )
0000fa e0e0     +LDI R30 , HIGH ( 2 )
0000fb 071e     +CPC R17 , R30
                 	__CPWRN 16,17,2
0000fc f098      	BRLO _0x2000013
0000fd 01f8      	MOVW R30,R16
0000fe 9731      	SBIW R30,1
0000ff 018f      	MOVW R16,R30
                +
000100 81aa     +LDD R26 , Y + 2
000101 81bb     +LDD R27 , Y + 2 + 1
000102 9614     +ADIW R26 , 4
000103 93ed     +ST X + , R30
000104 93fc     +ST X , R31
                 	__PUTW1SNS 2,4
                 _0x2000012:
000105 81aa      	LDD  R26,Y+2
000106 81bb      	LDD  R27,Y+2+1
000107 9612      	ADIW R26,2
000108 91ed      	LD   R30,X+
000109 91fd      	LD   R31,X+
00010a 9631      	ADIW R30,1
00010b 93fe      	ST   -X,R31
00010c 93ee      	ST   -X,R30
00010d 9731      	SBIW R30,1
00010e 81ac      	LDD  R26,Y+4
00010f 83a0      	STD  Z+0,R26
                 _0x2000013:
000110 81aa      	LDD  R26,Y+2
000111 81bb      	LDD  R27,Y+2+1
000112 940e 03e8 	CALL __GETW1P
000114 23ff      	TST  R31
000115 f02a      	BRMI _0x2000014
000116 91ed      	LD   R30,X+
000117 91fd      	LD   R31,X+
000118 9631      	ADIW R30,1
000119 93fe      	ST   -X,R31
00011a 93ee      	ST   -X,R30
                 _0x2000014:
00011b c006      	RJMP _0x2000015
                 _0x2000010:
00011c 81aa      	LDD  R26,Y+2
00011d 81bb      	LDD  R27,Y+2+1
00011e efef      	LDI  R30,LOW(65535)
00011f efff      	LDI  R31,HIGH(65535)
000120 93ed      	ST   X+,R30
000121 93fc      	ST   X,R31
                 _0x2000015:
000122 8119      	LDD  R17,Y+1
000123 8108      	LDD  R16,Y+0
000124 9625      	ADIW R28,5
000125 9508      	RET
                 ; .FEND
                 __print_G100:
                 ; .FSTART __print_G100
000126 93ba      	ST   -Y,R27
000127 93aa      	ST   -Y,R26
000128 9726      	SBIW R28,6
000129 940e 03f5 	CALL __SAVELOCR6
00012b e010      	LDI  R17,0
00012c 85ac      	LDD  R26,Y+12
00012d 85bd      	LDD  R27,Y+12+1
00012e e0e0      	LDI  R30,LOW(0)
00012f e0f0      	LDI  R31,HIGH(0)
000130 93ed      	ST   X+,R30
000131 93fc      	ST   X,R31
                 _0x2000016:
000132 89ea      	LDD  R30,Y+18
000133 89fb      	LDD  R31,Y+18+1
000134 9631      	ADIW R30,1
000135 8bea      	STD  Y+18,R30
000136 8bfb      	STD  Y+18+1,R31
000137 9731      	SBIW R30,1
000138 91e4      	LPM  R30,Z
000139 2f2e      	MOV  R18,R30
00013a 30e0      	CPI  R30,0
00013b f409      	BRNE PC+2
00013c c115      	RJMP _0x2000018
00013d 2fe1      	MOV  R30,R17
00013e 30e0      	CPI  R30,0
00013f f439      	BRNE _0x200001C
000140 3225      	CPI  R18,37
000141 f411      	BRNE _0x200001D
000142 e011      	LDI  R17,LOW(1)
000143 c002      	RJMP _0x200001E
                 _0x200001D:
000144 940e 0357 	CALL SUBOPT_0x0
                 _0x200001E:
000146 c10a      	RJMP _0x200001B
                 _0x200001C:
000147 30e1      	CPI  R30,LOW(0x1)
000148 f4a9      	BRNE _0x200001F
000149 3225      	CPI  R18,37
00014a f419      	BRNE _0x2000020
00014b 940e 0357 	CALL SUBOPT_0x0
00014d c102      	RJMP _0x20000CC
                 _0x2000020:
00014e e012      	LDI  R17,LOW(2)
00014f e040      	LDI  R20,LOW(0)
000150 e000      	LDI  R16,LOW(0)
000151 322d      	CPI  R18,45
000152 f411      	BRNE _0x2000021
000153 e001      	LDI  R16,LOW(1)
000154 c0fc      	RJMP _0x200001B
                 _0x2000021:
000155 322b      	CPI  R18,43
000156 f411      	BRNE _0x2000022
000157 e24b      	LDI  R20,LOW(43)
000158 c0f8      	RJMP _0x200001B
                 _0x2000022:
000159 3220      	CPI  R18,32
00015a f411      	BRNE _0x2000023
00015b e240      	LDI  R20,LOW(32)
00015c c0f4      	RJMP _0x200001B
                 _0x2000023:
00015d c002      	RJMP _0x2000024
                 _0x200001F:
00015e 30e2      	CPI  R30,LOW(0x2)
00015f f439      	BRNE _0x2000025
                 _0x2000024:
000160 e050      	LDI  R21,LOW(0)
000161 e013      	LDI  R17,LOW(3)
000162 3320      	CPI  R18,48
000163 f411      	BRNE _0x2000026
000164 6800      	ORI  R16,LOW(128)
000165 c0eb      	RJMP _0x200001B
                 _0x2000026:
000166 c003      	RJMP _0x2000027
                 _0x2000025:
000167 30e3      	CPI  R30,LOW(0x3)
000168 f009      	BREQ PC+2
000169 c0e7      	RJMP _0x200001B
                 _0x2000027:
00016a 3320      	CPI  R18,48
00016b f010      	BRLO _0x200002A
00016c 332a      	CPI  R18,58
00016d f008      	BRLO _0x200002B
                 _0x200002A:
00016e c007      	RJMP _0x2000029
                 _0x200002B:
00016f e0aa      	LDI  R26,LOW(10)
000170 9f5a      	MUL  R21,R26
000171 2d50      	MOV  R21,R0
000172 2fe2      	MOV  R30,R18
000173 53e0      	SUBI R30,LOW(48)
000174 0f5e      	ADD  R21,R30
000175 c0db      	RJMP _0x200001B
                 _0x2000029:
000176 2fe2      	MOV  R30,R18
000177 36e3      	CPI  R30,LOW(0x63)
000178 f449      	BRNE _0x200002F
000179 940e 035e 	CALL SUBOPT_0x1
00017b 89e8      	LDD  R30,Y+16
00017c 89f9      	LDD  R31,Y+16+1
00017d 81a4      	LDD  R26,Z+4
00017e 93aa      	ST   -Y,R26
00017f 940e 0364 	CALL SUBOPT_0x2
000181 c0ce      	RJMP _0x2000030
                 _0x200002F:
000182 37e3      	CPI  R30,LOW(0x73)
000183 f441      	BRNE _0x2000032
000184 940e 035e 	CALL SUBOPT_0x1
000186 940e 036a 	CALL SUBOPT_0x3
000188 940e 033e 	CALL _strlen
00018a 2f1e      	MOV  R17,R30
00018b c00a      	RJMP _0x2000033
                 _0x2000032:
00018c 37e0      	CPI  R30,LOW(0x70)
00018d f461      	BRNE _0x2000035
00018e 940e 035e 	CALL SUBOPT_0x1
000190 940e 036a 	CALL SUBOPT_0x3
000192 940e 034a 	CALL _strlenf
000194 2f1e      	MOV  R17,R30
000195 6008      	ORI  R16,LOW(8)
                 _0x2000033:
000196 6002      	ORI  R16,LOW(2)
000197 770f      	ANDI R16,LOW(127)
000198 e030      	LDI  R19,LOW(0)
000199 c034      	RJMP _0x2000036
                 _0x2000035:
00019a 36e4      	CPI  R30,LOW(0x64)
00019b f011      	BREQ _0x2000039
00019c 36e9      	CPI  R30,LOW(0x69)
00019d f411      	BRNE _0x200003A
                 _0x2000039:
00019e 6004      	ORI  R16,LOW(4)
00019f c002      	RJMP _0x200003B
                 _0x200003A:
0001a0 37e5      	CPI  R30,LOW(0x75)
0001a1 f431      	BRNE _0x200003C
                 _0x200003B:
0001a2 e5e4      	LDI  R30,LOW(_tbl10_G100*2)
0001a3 e0f0      	LDI  R31,HIGH(_tbl10_G100*2)
0001a4 83ee      	STD  Y+6,R30
0001a5 83ff      	STD  Y+6+1,R31
0001a6 e015      	LDI  R17,LOW(5)
0001a7 c00c      	RJMP _0x200003D
                 _0x200003C:
0001a8 35e8      	CPI  R30,LOW(0x58)
0001a9 f411      	BRNE _0x200003F
0001aa 6008      	ORI  R16,LOW(8)
0001ab c003      	RJMP _0x2000040
                 _0x200003F:
0001ac 37e8      	CPI  R30,LOW(0x78)
0001ad f009      	BREQ PC+2
0001ae c0a1      	RJMP _0x2000071
                 _0x2000040:
0001af e5ee      	LDI  R30,LOW(_tbl16_G100*2)
0001b0 e0f0      	LDI  R31,HIGH(_tbl16_G100*2)
0001b1 83ee      	STD  Y+6,R30
0001b2 83ff      	STD  Y+6+1,R31
0001b3 e014      	LDI  R17,LOW(4)
                 _0x200003D:
0001b4 ff02      	SBRS R16,2
0001b5 c014      	RJMP _0x2000042
0001b6 940e 035e 	CALL SUBOPT_0x1
0001b8 940e 0374 	CALL SUBOPT_0x4
0001ba 85ab      	LDD  R26,Y+11
0001bb 23aa      	TST  R26
0001bc f43a      	BRPL _0x2000043
0001bd 85ea      	LDD  R30,Y+10
0001be 85fb      	LDD  R31,Y+10+1
0001bf 940e 039f 	CALL __ANEGW1
0001c1 87ea      	STD  Y+10,R30
0001c2 87fb      	STD  Y+10+1,R31
0001c3 e24d      	LDI  R20,LOW(45)
                 _0x2000043:
0001c4 3040      	CPI  R20,0
0001c5 f011      	BREQ _0x2000044
0001c6 5f1f      	SUBI R17,-LOW(1)
0001c7 c001      	RJMP _0x2000045
                 _0x2000044:
0001c8 7f0b      	ANDI R16,LOW(251)
                 _0x2000045:
0001c9 c004      	RJMP _0x2000046
                 _0x2000042:
0001ca 940e 035e 	CALL SUBOPT_0x1
0001cc 940e 0374 	CALL SUBOPT_0x4
                 _0x2000046:
                 _0x2000036:
0001ce fd00      	SBRC R16,0
0001cf c011      	RJMP _0x2000047
                 _0x2000048:
0001d0 1715      	CP   R17,R21
0001d1 f478      	BRSH _0x200004A
0001d2 ff07      	SBRS R16,7
0001d3 c008      	RJMP _0x200004B
0001d4 ff02      	SBRS R16,2
0001d5 c004      	RJMP _0x200004C
0001d6 7f0b      	ANDI R16,LOW(251)
0001d7 2f24      	MOV  R18,R20
0001d8 5011      	SUBI R17,LOW(1)
0001d9 c001      	RJMP _0x200004D
                 _0x200004C:
0001da e320      	LDI  R18,LOW(48)
                 _0x200004D:
0001db c001      	RJMP _0x200004E
                 _0x200004B:
0001dc e220      	LDI  R18,LOW(32)
                 _0x200004E:
0001dd 940e 0357 	CALL SUBOPT_0x0
0001df 5051      	SUBI R21,LOW(1)
0001e0 cfef      	RJMP _0x2000048
                 _0x200004A:
                 _0x2000047:
0001e1 2f31      	MOV  R19,R17
0001e2 ff01      	SBRS R16,1
0001e3 c017      	RJMP _0x200004F
                 _0x2000050:
0001e4 3030      	CPI  R19,0
0001e5 f0a1      	BREQ _0x2000052
0001e6 ff03      	SBRS R16,3
0001e7 c006      	RJMP _0x2000053
0001e8 81ee      	LDD  R30,Y+6
0001e9 81ff      	LDD  R31,Y+6+1
0001ea 9125      	LPM  R18,Z+
0001eb 83ee      	STD  Y+6,R30
0001ec 83ff      	STD  Y+6+1,R31
0001ed c005      	RJMP _0x2000054
                 _0x2000053:
0001ee 81ae      	LDD  R26,Y+6
0001ef 81bf      	LDD  R27,Y+6+1
0001f0 912d      	LD   R18,X+
0001f1 83ae      	STD  Y+6,R26
0001f2 83bf      	STD  Y+6+1,R27
                 _0x2000054:
0001f3 940e 0357 	CALL SUBOPT_0x0
0001f5 3050      	CPI  R21,0
0001f6 f009      	BREQ _0x2000055
0001f7 5051      	SUBI R21,LOW(1)
                 _0x2000055:
0001f8 5031      	SUBI R19,LOW(1)
0001f9 cfea      	RJMP _0x2000050
                 _0x2000052:
0001fa c04b      	RJMP _0x2000056
                 _0x200004F:
                 _0x2000058:
0001fb e320      	LDI  R18,LOW(48)
0001fc 81ee      	LDD  R30,Y+6
0001fd 81ff      	LDD  R31,Y+6+1
0001fe 940e 03ec 	CALL __GETW1PF
000200 87e8      	STD  Y+8,R30
000201 87f9      	STD  Y+8+1,R31
000202 81ee      	LDD  R30,Y+6
000203 81ff      	LDD  R31,Y+6+1
000204 9632      	ADIW R30,2
000205 83ee      	STD  Y+6,R30
000206 83ff      	STD  Y+6+1,R31
                 _0x200005A:
000207 85e8      	LDD  R30,Y+8
000208 85f9      	LDD  R31,Y+8+1
000209 85aa      	LDD  R26,Y+10
00020a 85bb      	LDD  R27,Y+10+1
00020b 17ae      	CP   R26,R30
00020c 07bf      	CPC  R27,R31
00020d f050      	BRLO _0x200005C
00020e 5f2f      	SUBI R18,-LOW(1)
00020f 85a8      	LDD  R26,Y+8
000210 85b9      	LDD  R27,Y+8+1
000211 85ea      	LDD  R30,Y+10
000212 85fb      	LDD  R31,Y+10+1
000213 1bea      	SUB  R30,R26
000214 0bfb      	SBC  R31,R27
000215 87ea      	STD  Y+10,R30
000216 87fb      	STD  Y+10+1,R31
000217 cfef      	RJMP _0x200005A
                 _0x200005C:
000218 332a      	CPI  R18,58
000219 f028      	BRLO _0x200005D
00021a ff03      	SBRS R16,3
00021b c002      	RJMP _0x200005E
00021c 5f29      	SUBI R18,-LOW(7)
00021d c001      	RJMP _0x200005F
                 _0x200005E:
00021e 5d29      	SUBI R18,-LOW(39)
                 _0x200005F:
                 _0x200005D:
00021f fd04      	SBRC R16,4
000220 c01a      	RJMP _0x2000061
000221 3321      	CPI  R18,49
000222 f420      	BRSH _0x2000063
000223 85a8      	LDD  R26,Y+8
000224 85b9      	LDD  R27,Y+8+1
000225 9711      	SBIW R26,1
000226 f409      	BRNE _0x2000062
                 _0x2000063:
000227 c009      	RJMP _0x20000CD
                 _0x2000062:
000228 1753      	CP   R21,R19
000229 f010      	BRLO _0x2000067
00022a ff00      	SBRS R16,0
00022b c001      	RJMP _0x2000068
                 _0x2000067:
00022c c013      	RJMP _0x2000066
                 _0x2000068:
00022d e220      	LDI  R18,LOW(32)
00022e ff07      	SBRS R16,7
00022f c00b      	RJMP _0x2000069
000230 e320      	LDI  R18,LOW(48)
                 _0x20000CD:
000231 6100      	ORI  R16,LOW(16)
000232 ff02      	SBRS R16,2
000233 c007      	RJMP _0x200006A
000234 7f0b      	ANDI R16,LOW(251)
000235 934a      	ST   -Y,R20
000236 940e 0364 	CALL SUBOPT_0x2
000238 3050      	CPI  R21,0
000239 f009      	BREQ _0x200006B
00023a 5051      	SUBI R21,LOW(1)
                 _0x200006B:
                 _0x200006A:
                 _0x2000069:
                 _0x2000061:
00023b 940e 0357 	CALL SUBOPT_0x0
00023d 3050      	CPI  R21,0
00023e f009      	BREQ _0x200006C
00023f 5051      	SUBI R21,LOW(1)
                 _0x200006C:
                 _0x2000066:
000240 5031      	SUBI R19,LOW(1)
000241 85a8      	LDD  R26,Y+8
000242 85b9      	LDD  R27,Y+8+1
000243 9712      	SBIW R26,2
000244 f008      	BRLO _0x2000059
000245 cfb5      	RJMP _0x2000058
                 _0x2000059:
                 _0x2000056:
000246 ff00      	SBRS R16,0
000247 c008      	RJMP _0x200006D
                 _0x200006E:
000248 3050      	CPI  R21,0
000249 f031      	BREQ _0x2000070
00024a 5051      	SUBI R21,LOW(1)
00024b e2e0      	LDI  R30,LOW(32)
00024c 93ea      	ST   -Y,R30
00024d 940e 0364 	CALL SUBOPT_0x2
00024f cff8      	RJMP _0x200006E
                 _0x2000070:
                 _0x200006D:
                 _0x2000071:
                 _0x2000030:
                 _0x20000CC:
000250 e010      	LDI  R17,LOW(0)
                 _0x200001B:
000251 cee0      	RJMP _0x2000016
                 _0x2000018:
000252 85ac      	LDD  R26,Y+12
000253 85bd      	LDD  R27,Y+12+1
000254 940e 03e8 	CALL __GETW1P
000256 940e 03fc 	CALL __LOADLOCR6
000258 9664      	ADIW R28,20
000259 9508      	RET
                 ; .FEND
                 _sprintf:
                 ; .FSTART _sprintf
00025a 92ff      	PUSH R15
00025b 2ef8      	MOV  R15,R24
00025c 9726      	SBIW R28,6
00025d 940e 03f7 	CALL __SAVELOCR4
00025f 940e 037c 	CALL SUBOPT_0x5
000261 9730      	SBIW R30,0
000262 f419      	BRNE _0x2000072
000263 efef      	LDI  R30,LOW(65535)
000264 efff      	LDI  R31,HIGH(65535)
000265 c023      	RJMP _0x2080003
                 _0x2000072:
000266 01de      	MOVW R26,R28
000267 9616      	ADIW R26,6
000268 940e 039b 	CALL __ADDW2R15
00026a 018d      	MOVW R16,R26
00026b 940e 037c 	CALL SUBOPT_0x5
00026d 83ee      	STD  Y+6,R30
00026e 83ff      	STD  Y+6+1,R31
00026f e0e0      	LDI  R30,LOW(0)
000270 87e8      	STD  Y+8,R30
000271 87e9      	STD  Y+8+1,R30
000272 01de      	MOVW R26,R28
000273 961a      	ADIW R26,10
000274 940e 039b 	CALL __ADDW2R15
000276 940e 03e8 	CALL __GETW1P
000278 93fa      	ST   -Y,R31
000279 93ea      	ST   -Y,R30
00027a 931a      	ST   -Y,R17
00027b 930a      	ST   -Y,R16
00027c eee6      	LDI  R30,LOW(_put_buff_G100)
00027d e0f0      	LDI  R31,HIGH(_put_buff_G100)
00027e 93fa      	ST   -Y,R31
00027f 93ea      	ST   -Y,R30
000280 01de      	MOVW R26,R28
000281 961a      	ADIW R26,10
000282 dea3      	RCALL __print_G100
000283 019f      	MOVW R18,R30
000284 81ae      	LDD  R26,Y+6
000285 81bf      	LDD  R27,Y+6+1
000286 e0e0      	LDI  R30,LOW(0)
000287 93ec      	ST   X,R30
000288 01f9      	MOVW R30,R18
                 _0x2080003:
000289 940e 03fe 	CALL __LOADLOCR4
00028b 962a      	ADIW R28,10
00028c 90ff      	POP  R15
00028d 9508      	RET
                 ; .FEND
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.DSEG
                 
                 	.CSEG
                 __lcd_write_nibble_G101:
                 ; .FSTART __lcd_write_nibble_G101
00028e 93aa      	ST   -Y,R26
00028f 81e8      	LD   R30,Y
000290 71e0      	ANDI R30,LOW(0x10)
000291 f011      	BREQ _0x2020004
000292 9aaa      	SBI  0x15,2
000293 c001      	RJMP _0x2020005
                 _0x2020004:
000294 98aa      	CBI  0x15,2
                 _0x2020005:
000295 81e8      	LD   R30,Y
000296 72e0      	ANDI R30,LOW(0x20)
000297 f011      	BREQ _0x2020006
000298 9aab      	SBI  0x15,3
000299 c001      	RJMP _0x2020007
                 _0x2020006:
00029a 98ab      	CBI  0x15,3
                 _0x2020007:
00029b 81e8      	LD   R30,Y
00029c 74e0      	ANDI R30,LOW(0x40)
00029d f011      	BREQ _0x2020008
00029e 9aac      	SBI  0x15,4
00029f c001      	RJMP _0x2020009
                 _0x2020008:
0002a0 98ac      	CBI  0x15,4
                 _0x2020009:
0002a1 81e8      	LD   R30,Y
0002a2 78e0      	ANDI R30,LOW(0x80)
0002a3 f011      	BREQ _0x202000A
0002a4 9aad      	SBI  0x15,5
0002a5 c001      	RJMP _0x202000B
                 _0x202000A:
0002a6 98ad      	CBI  0x15,5
                 _0x202000B:
                +
0002a7 e08d     +LDI R24 , LOW ( 13 )
                +__DELAY_USB_LOOP :
0002a8 958a     +DEC R24
0002a9 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 13
0002aa 9aa9      	SBI  0x15,1
                +
0002ab e08d     +LDI R24 , LOW ( 13 )
                +__DELAY_USB_LOOP :
0002ac 958a     +DEC R24
0002ad f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 13
0002ae 98a9      	CBI  0x15,1
                +
0002af e08d     +LDI R24 , LOW ( 13 )
                +__DELAY_USB_LOOP :
0002b0 958a     +DEC R24
0002b1 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 13
0002b2 c089      	RJMP _0x2080001
                 ; .FEND
                 __lcd_write_data:
                 ; .FSTART __lcd_write_data
0002b3 93aa      	ST   -Y,R26
0002b4 81a8      	LD   R26,Y
0002b5 dfd8      	RCALL __lcd_write_nibble_G101
0002b6 81e8          ld    r30,y
0002b7 95e2          swap  r30
0002b8 83e8          st    y,r30
0002b9 81a8      	LD   R26,Y
0002ba dfd3      	RCALL __lcd_write_nibble_G101
                +
0002bb e885     +LDI R24 , LOW ( 133 )
                +__DELAY_USB_LOOP :
0002bc 958a     +DEC R24
0002bd f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 133
0002be c07d      	RJMP _0x2080001
                 ; .FEND
                 _lcd_gotoxy:
                 ; .FSTART _lcd_gotoxy
0002bf 93aa      	ST   -Y,R26
0002c0 81e8      	LD   R30,Y
0002c1 e0f0      	LDI  R31,0
0002c2 58ec      	SUBI R30,LOW(-__base_y_G101)
0002c3 4ffe      	SBCI R31,HIGH(-__base_y_G101)
0002c4 81e0      	LD   R30,Z
0002c5 81a9      	LDD  R26,Y+1
0002c6 0fae      	ADD  R26,R30
0002c7 dfeb      	RCALL __lcd_write_data
0002c8 8079      	LDD  R7,Y+1
0002c9 8068      	LDD  R6,Y+0
0002ca 9622      	ADIW R28,2
0002cb 9508      	RET
                 ; .FEND
                 _lcd_clear:
                 ; .FSTART _lcd_clear
0002cc e0a2      	LDI  R26,LOW(2)
0002cd 940e 0383 	CALL SUBOPT_0x6
0002cf e0ac      	LDI  R26,LOW(12)
0002d0 dfe2      	RCALL __lcd_write_data
0002d1 e0a1      	LDI  R26,LOW(1)
0002d2 940e 0383 	CALL SUBOPT_0x6
0002d4 e0e0      	LDI  R30,LOW(0)
0002d5 2e6e      	MOV  R6,R30
0002d6 2e7e      	MOV  R7,R30
0002d7 9508      	RET
                 ; .FEND
                 _lcd_putchar:
                 ; .FSTART _lcd_putchar
0002d8 93aa      	ST   -Y,R26
0002d9 81a8      	LD   R26,Y
0002da 30aa      	CPI  R26,LOW(0xA)
0002db f011      	BREQ _0x2020011
0002dc 1479      	CP   R7,R9
0002dd f048      	BRLO _0x2020010
                 _0x2020011:
0002de e0e0      	LDI  R30,LOW(0)
0002df 93ea      	ST   -Y,R30
0002e0 9463      	INC  R6
0002e1 2da6      	MOV  R26,R6
0002e2 dfdc      	RCALL _lcd_gotoxy
0002e3 81a8      	LD   R26,Y
0002e4 30aa      	CPI  R26,LOW(0xA)
0002e5 f409      	BRNE _0x2020013
0002e6 c055      	RJMP _0x2080001
                 _0x2020013:
                 _0x2020010:
0002e7 9473      	INC  R7
0002e8 9aa8      	SBI  0x15,0
0002e9 81a8      	LD   R26,Y
0002ea dfc8      	RCALL __lcd_write_data
0002eb 98a8      	CBI  0x15,0
0002ec c04f      	RJMP _0x2080001
                 ; .FEND
                 _lcd_puts:
                 ; .FSTART _lcd_puts
0002ed 93ba      	ST   -Y,R27
0002ee 93aa      	ST   -Y,R26
0002ef 931a      	ST   -Y,R17
                 _0x2020014:
0002f0 81a9      	LDD  R26,Y+1
0002f1 81ba      	LDD  R27,Y+1+1
0002f2 91ed      	LD   R30,X+
0002f3 83a9      	STD  Y+1,R26
0002f4 83ba      	STD  Y+1+1,R27
0002f5 2f1e      	MOV  R17,R30
0002f6 30e0      	CPI  R30,0
0002f7 f019      	BREQ _0x2020016
0002f8 2fa1      	MOV  R26,R17
0002f9 dfde      	RCALL _lcd_putchar
0002fa cff5      	RJMP _0x2020014
                 _0x2020016:
0002fb c010      	RJMP _0x2080002
                 ; .FEND
                 _lcd_putsf:
                 ; .FSTART _lcd_putsf
0002fc 93ba      	ST   -Y,R27
0002fd 93aa      	ST   -Y,R26
0002fe 931a      	ST   -Y,R17
                 _0x2020017:
0002ff 81e9      	LDD  R30,Y+1
000300 81fa      	LDD  R31,Y+1+1
000301 9631      	ADIW R30,1
000302 83e9      	STD  Y+1,R30
000303 83fa      	STD  Y+1+1,R31
000304 9731      	SBIW R30,1
000305 91e4      	LPM  R30,Z
000306 2f1e      	MOV  R17,R30
000307 30e0      	CPI  R30,0
000308 f019      	BREQ _0x2020019
000309 2fa1      	MOV  R26,R17
00030a dfcd      	RCALL _lcd_putchar
00030b cff3      	RJMP _0x2020017
                 _0x2020019:
                 _0x2080002:
00030c 8118      	LDD  R17,Y+0
00030d 9623      	ADIW R28,3
00030e 9508      	RET
                 ; .FEND
                 _lcd_init:
                 ; .FSTART _lcd_init
00030f 93aa      	ST   -Y,R26
000310 9aa2      	SBI  0x14,2
000311 9aa3      	SBI  0x14,3
000312 9aa4      	SBI  0x14,4
000313 9aa5      	SBI  0x14,5
000314 9aa1      	SBI  0x14,1
000315 9aa0      	SBI  0x14,0
000316 9a89      	SBI  0x11,1
000317 98a9      	CBI  0x15,1
000318 98a8      	CBI  0x15,0
000319 9891      	CBI  0x12,1
00031a 8098      	LDD  R9,Y+0
00031b 81e8      	LD   R30,Y
00031c 58e0      	SUBI R30,-LOW(128)
                +
00031d 93e0 0176+STS __base_y_G101 + ( 2 ) , R30
                 	__PUTB1MN __base_y_G101,2
00031f 81e8      	LD   R30,Y
000320 54e0      	SUBI R30,-LOW(192)
                +
000321 93e0 0177+STS __base_y_G101 + ( 3 ) , R30
                 	__PUTB1MN __base_y_G101,3
000323 e1a4      	LDI  R26,LOW(20)
000324 e0b0      	LDI  R27,0
000325 940e 0391 	CALL _delay_ms
000327 940e 0389 	CALL SUBOPT_0x7
000329 940e 0389 	CALL SUBOPT_0x7
00032b 940e 0389 	CALL SUBOPT_0x7
00032d e2a0      	LDI  R26,LOW(32)
00032e df5f      	RCALL __lcd_write_nibble_G101
                +
00032f ec88     +LDI R24 , LOW ( 200 )
000330 e090     +LDI R25 , HIGH ( 200 )
                +__DELAY_USW_LOOP :
000331 9701     +SBIW R24 , 1
000332 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 200
000333 e2a8      	LDI  R26,LOW(40)
000334 df7e      	RCALL __lcd_write_data
000335 e0a4      	LDI  R26,LOW(4)
000336 df7c      	RCALL __lcd_write_data
000337 e8a5      	LDI  R26,LOW(133)
000338 df7a      	RCALL __lcd_write_data
000339 e0a6      	LDI  R26,LOW(6)
00033a df78      	RCALL __lcd_write_data
00033b df90      	RCALL _lcd_clear
                 _0x2080001:
00033c 9621      	ADIW R28,1
00033d 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 
                 	.CSEG
                 _strlen:
                 ; .FSTART _strlen
00033e 93ba      	ST   -Y,R27
00033f 93aa      	ST   -Y,R26
000340 91a9          ld   r26,y+
000341 91b9          ld   r27,y+
000342 27ee          clr  r30
000343 27ff          clr  r31
                 strlen0:
000344 916d          ld   r22,x+
000345 2366          tst  r22
000346 f011          breq strlen1
000347 9631          adiw r30,1
000348 cffb          rjmp strlen0
                 strlen1:
000349 9508          ret
                 ; .FEND
                 _strlenf:
                 ; .FSTART _strlenf
00034a 93ba      	ST   -Y,R27
00034b 93aa      	ST   -Y,R26
00034c 27aa          clr  r26
00034d 27bb          clr  r27
00034e 91e9          ld   r30,y+
00034f 91f9          ld   r31,y+
                 strlenf0:
000350 9005      	lpm  r0,z+
000351 2000          tst  r0
000352 f011          breq strlenf1
000353 9611          adiw r26,1
000354 cffb          rjmp strlenf0
                 strlenf1:
000355 01fd          movw r30,r26
000356 9508          ret
                 ; .FEND
                 
                 	.DSEG
                 _tmp:
000160           	.BYTE 0x14
                 __base_y_G101:
000174           	.BYTE 0x4
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x0:
000357 932a      	ST   -Y,R18
000358 85ad      	LDD  R26,Y+13
000359 85be      	LDD  R27,Y+13+1
00035a 85ef      	LDD  R30,Y+15
00035b 89f8      	LDD  R31,Y+15+1
00035c 9509      	ICALL
00035d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x1:
00035e 89e8      	LDD  R30,Y+16
00035f 89f9      	LDD  R31,Y+16+1
000360 9734      	SBIW R30,4
000361 8be8      	STD  Y+16,R30
000362 8bf9      	STD  Y+16+1,R31
000363 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x2:
000364 85ad      	LDD  R26,Y+13
000365 85be      	LDD  R27,Y+13+1
000366 85ef      	LDD  R30,Y+15
000367 89f8      	LDD  R31,Y+15+1
000368 9509      	ICALL
000369 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x3:
00036a 89a8      	LDD  R26,Y+16
00036b 89b9      	LDD  R27,Y+16+1
00036c 9614      	ADIW R26,4
00036d 940e 03e8 	CALL __GETW1P
00036f 83ee      	STD  Y+6,R30
000370 83ff      	STD  Y+6+1,R31
000371 81ae      	LDD  R26,Y+6
000372 81bf      	LDD  R27,Y+6+1
000373 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x4:
000374 89a8      	LDD  R26,Y+16
000375 89b9      	LDD  R27,Y+16+1
000376 9614      	ADIW R26,4
000377 940e 03e8 	CALL __GETW1P
000379 87ea      	STD  Y+10,R30
00037a 87fb      	STD  Y+10+1,R31
00037b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x5:
00037c 01de      	MOVW R26,R28
00037d 961c      	ADIW R26,12
00037e 940e 039b 	CALL __ADDW2R15
000380 940e 03e8 	CALL __GETW1P
000382 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x6:
000383 940e 02b3 	CALL __lcd_write_data
000385 e0a3      	LDI  R26,LOW(3)
000386 e0b0      	LDI  R27,0
000387 940c 0391 	JMP  _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x7:
000389 e3a0      	LDI  R26,LOW(48)
00038a 940e 028e 	CALL __lcd_write_nibble_G101
                +
00038c ec88     +LDI R24 , LOW ( 200 )
00038d e090     +LDI R25 , HIGH ( 200 )
                +__DELAY_USW_LOOP :
00038e 9701     +SBIW R24 , 1
00038f f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 200
000390 9508      	RET
                 
                 
                 	.CSEG
                 _delay_ms:
000391 9610      	adiw r26,0
000392 f039      	breq __delay_ms1
                 __delay_ms0:
                +
000393 ed80     +LDI R24 , LOW ( 0x7D0 )
000394 e097     +LDI R25 , HIGH ( 0x7D0 )
                +__DELAY_USW_LOOP :
000395 9701     +SBIW R24 , 1
000396 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0x7D0
000397 95a8      	wdr
000398 9711      	sbiw r26,1
000399 f7c9      	brne __delay_ms0
                 __delay_ms1:
00039a 9508      	ret
                 
                 __ADDW2R15:
00039b 2400      	CLR  R0
00039c 0daf      	ADD  R26,R15
00039d 1db0      	ADC  R27,R0
00039e 9508      	RET
                 
                 __ANEGW1:
00039f 95f1      	NEG  R31
0003a0 95e1      	NEG  R30
0003a1 40f0      	SBCI R31,0
0003a2 9508      	RET
                 
                 __ANEGD1:
0003a3 95f0      	COM  R31
0003a4 9560      	COM  R22
0003a5 9570      	COM  R23
0003a6 95e1      	NEG  R30
0003a7 4fff      	SBCI R31,-1
0003a8 4f6f      	SBCI R22,-1
0003a9 4f7f      	SBCI R23,-1
0003aa 9508      	RET
                 
                 __DIVD21U:
0003ab 933f      	PUSH R19
0003ac 934f      	PUSH R20
0003ad 935f      	PUSH R21
0003ae 2400      	CLR  R0
0003af 2411      	CLR  R1
0003b0 2744      	CLR  R20
0003b1 2755      	CLR  R21
0003b2 e230      	LDI  R19,32
                 __DIVD21U1:
0003b3 0faa      	LSL  R26
0003b4 1fbb      	ROL  R27
0003b5 1f88      	ROL  R24
0003b6 1f99      	ROL  R25
0003b7 1c00      	ROL  R0
0003b8 1c11      	ROL  R1
0003b9 1f44      	ROL  R20
0003ba 1f55      	ROL  R21
0003bb 1a0e      	SUB  R0,R30
0003bc 0a1f      	SBC  R1,R31
0003bd 0b46      	SBC  R20,R22
0003be 0b57      	SBC  R21,R23
0003bf f428      	BRCC __DIVD21U2
0003c0 0e0e      	ADD  R0,R30
0003c1 1e1f      	ADC  R1,R31
0003c2 1f46      	ADC  R20,R22
0003c3 1f57      	ADC  R21,R23
0003c4 c001      	RJMP __DIVD21U3
                 __DIVD21U2:
0003c5 60a1      	SBR  R26,1
                 __DIVD21U3:
0003c6 953a      	DEC  R19
0003c7 f759      	BRNE __DIVD21U1
0003c8 01fd      	MOVW R30,R26
0003c9 01bc      	MOVW R22,R24
0003ca 01d0      	MOVW R26,R0
0003cb 01ca      	MOVW R24,R20
0003cc 915f      	POP  R21
0003cd 914f      	POP  R20
0003ce 913f      	POP  R19
0003cf 9508      	RET
                 
                 __DIVD21:
0003d0 d004      	RCALL __CHKSIGND
0003d1 dfd9      	RCALL __DIVD21U
0003d2 f40e      	BRTC __DIVD211
0003d3 dfcf      	RCALL __ANEGD1
                 __DIVD211:
0003d4 9508      	RET
                 
                 __CHKSIGND:
0003d5 94e8      	CLT
0003d6 ff77      	SBRS R23,7
0003d7 c002      	RJMP __CHKSD1
0003d8 dfca      	RCALL __ANEGD1
0003d9 9468      	SET
                 __CHKSD1:
0003da ff97      	SBRS R25,7
0003db c00b      	RJMP __CHKSD2
0003dc 2400      	CLR  R0
0003dd 95a0      	COM  R26
0003de 95b0      	COM  R27
0003df 9580      	COM  R24
0003e0 9590      	COM  R25
0003e1 9611      	ADIW R26,1
0003e2 1d80      	ADC  R24,R0
0003e3 1d90      	ADC  R25,R0
0003e4 f800      	BLD  R0,0
0003e5 9403      	INC  R0
0003e6 fa00      	BST  R0,0
                 __CHKSD2:
0003e7 9508      	RET
                 
                 __GETW1P:
0003e8 91ed      	LD   R30,X+
0003e9 91fc      	LD   R31,X
0003ea 9711      	SBIW R26,1
0003eb 9508      	RET
                 
                 __GETW1PF:
0003ec 9005      	LPM  R0,Z+
0003ed 91f4      	LPM  R31,Z
0003ee 2de0      	MOV  R30,R0
0003ef 9508      	RET
                 
                 __PUTPARD1:
0003f0 937a      	ST   -Y,R23
0003f1 936a      	ST   -Y,R22
0003f2 93fa      	ST   -Y,R31
0003f3 93ea      	ST   -Y,R30
0003f4 9508      	RET
                 
                 __SAVELOCR6:
0003f5 935a      	ST   -Y,R21
                 __SAVELOCR5:
0003f6 934a      	ST   -Y,R20
                 __SAVELOCR4:
0003f7 933a      	ST   -Y,R19
                 __SAVELOCR3:
0003f8 932a      	ST   -Y,R18
                 __SAVELOCR2:
0003f9 931a      	ST   -Y,R17
0003fa 930a      	ST   -Y,R16
0003fb 9508      	RET
                 
                 __LOADLOCR6:
0003fc 815d      	LDD  R21,Y+5
                 __LOADLOCR5:
0003fd 814c      	LDD  R20,Y+4
                 __LOADLOCR4:
0003fe 813b      	LDD  R19,Y+3
                 __LOADLOCR3:
0003ff 812a      	LDD  R18,Y+2
                 __LOADLOCR2:
000400 8119      	LDD  R17,Y+1
000401 8108      	LD   R16,Y
000402 9508      	RET
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega16 register use summary:
r0 :  22 r1 :   5 r2 :   0 r3 :   0 r4 :   2 r5 :   0 r6 :   4 r7 :   4 
r8 :   0 r9 :   2 r10:   0 r11:   0 r12:   0 r13:   0 r14:   0 r15:   4 
r16:  34 r17:  27 r18:  29 r19:  12 r20:  16 r21:  23 r22:  11 r23:   7 
r24:  29 r25:  10 r26: 110 r27:  42 r28:  14 r29:   1 r30: 221 r31:  66 
x  :  23 y  : 185 z  :  16 
Registers used: 26 out of 35 (74.3%)

ATmega16 instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :   6 add   :   4 
adiw  :  26 and   :   0 andi  :   8 asr   :   0 bclr  :   0 bld   :   1 
brbc  :   0 brbs  :   0 brcc  :   1 brcs  :   0 break :   0 breq  :  22 
brge  :   0 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :   8 
brlt  :   0 brmi  :   1 brne  :  31 brpl  :   1 brsh  :   2 brtc  :   1 
brts  :   0 brvc  :   0 brvs  :   0 bset  :   0 bst   :   1 call  :  54 
cbi   :   9 cbr   :   0 clc   :   0 clh   :   0 cli   :   1 cln   :   0 
clr   :  14 cls   :   0 clt   :   1 clv   :   0 clz   :   0 com   :   7 
cp    :   4 cpc   :   2 cpi   :  34 cpse  :   0 dec   :   6 des   :   0 
eor   :   0 fmul  :   0 fmuls :   0 fmulsu:   0 icall :   2 ijmp  :   0 
in    :   4 inc   :   3 jmp   :  23 ld    :  32 ldd   :  79 ldi   : 105 
lds   :   0 lpm   :  16 lsl   :   1 lsr   :   0 mov   :  20 movw  :  20 
mul   :   1 muls  :   0 mulsu :   0 neg   :   3 nop   :   0 or    :   1 
ori   :   7 out   :  45 pop   :   4 push  :   4 rcall :  19 ret   :  28 
reti  :   1 rjmp  :  68 rol   :   7 ror   :   0 sbc   :   4 sbci  :   5 
sbi   :  13 sbic  :   0 sbis  :   0 sbiw  :  20 sbr   :   1 sbrc  :   2 
sbrs  :  12 sec   :   0 seh   :   0 sei   :   1 sen   :   0 ser   :   0 
ses   :   0 set   :   1 sev   :   0 sez   :   0 sleep :   0 spm   :   0 
st    :  67 std   :  33 sts   :   2 sub   :   2 subi  :  16 swap  :   1 
tst   :   4 wdr   :   1 
Instructions used: 64 out of 116 (55.2%)

ATmega16 memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x000806   1998     56   2054   16384  12.5%
[.dseg] 0x000060 0x000178      0     24     24    1024   2.3%
[.eseg] 0x000000 0x000000      0      0      0     512   0.0%

Assembly complete, 0 errors, 5 warnings
